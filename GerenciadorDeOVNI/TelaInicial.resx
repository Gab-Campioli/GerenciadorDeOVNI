<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AKBb/h8dBYD6WAUAhQAAAABJRU5ErkJggg==
</value>
  </data>
</root>